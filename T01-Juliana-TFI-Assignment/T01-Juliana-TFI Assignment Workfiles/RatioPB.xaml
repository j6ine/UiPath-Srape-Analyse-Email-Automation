<Activity mc:Ignorable="sap sap2010" x:Class="RatioPB" this:RatioPB.netflixScrapedDataExcelPath="C:\Users\julia\Documents\UiPath\TFI ASG\T01-Juliana-TFI-Assignment\NetflixScrapedData.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="netflixScrapedDataExcelPath" Type="InArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>261.6,544</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="20">
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Netflix Price/Book Ratio Historical Data" DisplayName="Scrap P/B Ratio &amp; Store in Excel sequence" sap:VirtualizedContainerService.HintSize="241.6,484" sap2010:WorkflowViewState.IdRef="Sequence_43">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtPB" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtPBclean" />
      <Variable x:TypeArguments="x:Int32" Name="lastRowIndex" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Macrotrends. Scrape P/B ratio" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="OpenBrowser_10" Url="https://www.macrotrends.net/stocks/charts/NFLX/netflix/price-book">
      <ui:OpenBrowser.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Scrape macrotrends for P/B ratio. Close tab " sap:VirtualizedContainerService.HintSize="225.6,100" sap2010:WorkflowViewState.IdRef="Sequence_67">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExtractData DelayBetweenPagesMS="{x:Null}" NextLinkSelector="{x:Null}" sap2010:Annotation.AnnotationText="extract Structured Data for Netflix P/B ratio Historical Data &amp; store in dtPB " ContinueOnError="True" DataTable="[dtPB]" DisplayName="Extract Structured P/B data. Store in dtPB" ExtractMetadata="&lt;extract&gt;&lt;row exact='1'&gt;&lt;webctrl tag='tr' /&gt;&lt;/row&gt;&lt;column exact='1' name='Date' attr='text'&gt;&lt;webctrl tag='tr' /&gt;&lt;webctrl tag='td' idx='1' /&gt;&lt;/column&gt;&lt;column exact='1' name='P/B Ratio' attr='text'&gt;&lt;webctrl tag='tr' /&gt;&lt;webctrl tag='td' idx='4' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap:VirtualizedContainerService.HintSize="333.6,151.2" sap2010:WorkflowViewState.IdRef="ExtractData_23" MaxNumberOfResults="100" SimulateClick="True">
              <ui:ExtractData.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="5c85b1c4-d3aa-4040-a027-4999ec0fb2aa" InformativeScreenshot="404060ad5d3722a52ebeb96c08101f57" Selector="&lt;webctrl tag='TBODY' /&gt;" WaitForReady="COMPLETE">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                </ui:Target>
              </ui:ExtractData.Target>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExtractData>
            <ui:LogMessage DisplayName="Log lastRowIndex for dtPB" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;lastRowIndex for dtPB: &quot; + dtPB.Rows.Count.ToString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <ui:CloseTab Browser="{x:Null}" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="CloseTab_3" />
          </Sequence>
        </ActivityAction>
      </ui:OpenBrowser.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:OpenBrowser>
    <Sequence sap2010:Annotation.AnnotationText="only include data from 2017-2020" DisplayName="Clean dtPB" sap:VirtualizedContainerService.HintSize="200,112.8" sap2010:WorkflowViewState.IdRef="Sequence_119">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:FilterDataTable DataTable="[dtPB]" DisplayName="Filter dtPB to contain data from 2017-2020" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtPBclean]" SelectColumnsMode="Keep">
        <ui:FilterDataTable.Filters>
          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
            <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Date"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["2017"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Date"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["2018"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Date"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["2019"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
            <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
              <ui:FilterOperationArgument.Column>
                <InArgument x:TypeArguments="x:String">["Date"]</InArgument>
              </ui:FilterOperationArgument.Column>
              <ui:FilterOperationArgument.Operand>
                <InArgument x:TypeArguments="x:String">["2020"]</InArgument>
              </ui:FilterOperationArgument.Operand>
            </ui:FilterOperationArgument>
          </scg:List>
        </ui:FilterDataTable.Filters>
        <ui:FilterDataTable.SelectColumns>
          <scg:List x:TypeArguments="InArgument" Capacity="4">
            <x:Null />
          </scg:List>
        </ui:FilterDataTable.SelectColumns>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:FilterDataTable>
      <Assign sap2010:Annotation.AnnotationText="index of last row in excel of where the scraped data for P/B ratio is. adds 1 as index starts from 0. adds another 1 as the excel has an extra header." DisplayName="Assign lastRowIndex" sap:VirtualizedContainerService.HintSize="262.4,136" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[lastRowIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[dtPBclean.Rows.Count + 2]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:LogMessage DisplayName="Log lastRowIndex for dtPBclean" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;lastRowIndex for dtPBclean: &quot; + lastRowIndex.ToString]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope for P/B ratio" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" WorkbookPath="[netflixScrapedDataExcelPath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do on netflixScrapedDataExcelPath" sap:VirtualizedContainerService.HintSize="416.8,1251.2" sap2010:WorkflowViewState.IdRef="Sequence_123">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:String[]" Name="columnLetterList" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelWriteRange AddHeaders="True" sap2010:Annotation.AnnotationText="dtPB will be cleaned by here. write 2017-2020 data needed to calculate yearly average P/B ratio" DataTable="[dtPBclean]" DisplayName="Write dtPBclean to Netflix Sheet with headers" sap:VirtualizedContainerService.HintSize="375.2,128.8" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="Netflix" StartingCell="[&quot;N2:O&quot; + lastRowIndex.ToString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelWriteRange>
            <Sequence sap2010:Annotation.AnnotationText="get the year of the date column. excel formula is =YEAR(Jx) where x is the count variable." DisplayName="Write Year column in excel" sap:VirtualizedContainerService.HintSize="200,144.8" sap2010:WorkflowViewState.IdRef="Sequence_121">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="count" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap2010:Annotation.AnnotationText="keep count of index of rows" DisplayName="Assign count" sap:VirtualizedContainerService.HintSize="262.4,91.2" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">3</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="" DisplayName="Loop until end of dtPBclean" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                <ui:InterruptibleWhile.Body>
                  <Sequence DisplayName="Write &amp; Increment" sap:VirtualizedContainerService.HintSize="375.2,340.8" sap2010:WorkflowViewState.IdRef="Sequence_120">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="write corresponding year of the date column which was scraped. excel formula is =YEAR(Nx) where x is the count variable." Cell="[&quot;M&quot; + count.ToString]" DisplayName="Write Year column" sap:VirtualizedContainerService.HintSize="333.6,148" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Netflix" Text="[&quot;=YEAR(N&quot; + count.ToString + &quot;)&quot;]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelWriteCell>
                    <Assign DisplayName="Increment 1 to count" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[count + 1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ui:InterruptibleWhile.Body>
                <ui:InterruptibleWhile.Condition>
                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="lastRowIndex &gt;= count" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                </ui:InterruptibleWhile.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InterruptibleWhile>
            </Sequence>
            <Sequence DisplayName="Write yearly average of P/B ratio" sap:VirtualizedContainerService.HintSize="375.2,804.8" sap2010:WorkflowViewState.IdRef="Sequence_122">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="range" />
                <Variable x:TypeArguments="x:String" Name="avgRange" />
                <Variable x:TypeArguments="ui:GenericValue" Name="year2017" />
                <Variable x:TypeArguments="x:String" Name="quotes" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="Calculate average P/E ratio for year 2017. excel formula used is =AVERAGEIF(M3:M1x, 2017, O3:O1x)  where x is lastRowIndex" Cell="D3" DisplayName="Write formula for average 2017 P/B ratio" sap:VirtualizedContainerService.HintSize="333.6,148" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Netflix" Text="[&quot;=AVERAGEIF(M3:M&quot; + lastRowIndex.ToString +  &quot;, 2017, O3:O&quot; + lastRowIndex.ToString + &quot;)&quot;]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteCell>
              <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="Calculate average P/E ratio for year 2018. excel formula used is  =AVERAGEIF(M3:M1x, 2018, O3:O1x)  where x is lastRowIndex" Cell="D4" DisplayName="Write formula for average 2018 P/B ratio" sap:VirtualizedContainerService.HintSize="333.6,148" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Netflix" Text="[&quot;=AVERAGEIF(M3:M&quot; + lastRowIndex.ToString +  &quot;, 2018, O3:O&quot; + lastRowIndex.ToString + &quot;)&quot;]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteCell>
              <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="Calculate average P/E ratio for year 2019. excel formula used is =AVERAGEIF(M3:M1x, 2019, O3:O1x)  where x is lastRowIndex" Cell="D5" DisplayName="Write formula for average 2019 P/B ratio" sap:VirtualizedContainerService.HintSize="333.6,148" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Netflix" Text="[&quot;=AVERAGEIF(M3:M&quot; + lastRowIndex.ToString +  &quot;, 2019, O3:O&quot; + lastRowIndex.ToString + &quot;)&quot;]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteCell>
              <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="Calculate average P/E ratio for year 2020. excel formula used is =AVERAGEIF(M3:M1x, 2020, O3:O1x)  where x is lastRowIndex" Cell="D6" DisplayName="Write formula for average 2020 P/B ratio" sap:VirtualizedContainerService.HintSize="333.6,148" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Netflix" Text="[&quot;=AVERAGEIF(M3:M&quot; + lastRowIndex.ToString +  &quot;, 2020, O3:O&quot; + lastRowIndex.ToString + &quot;)&quot;]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteCell>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:LogMessage DisplayName="Log PB sequence completed" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Scrap PB Ratio Sequence - completed&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>